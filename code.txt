import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
import os
sns.set_style('ticks')
import warnings
warnings.filterwarnings('ignore')
import plotly.offline as py
py.init_notebook_mode(connected=True)
import plotly.graph_objs as go
import plotly.figure_factory as ff

from IPython.display import HTML
#%%
from google.colab import drive
drive.mount('/content/drive')

path = "/content/drive/MyDrive/Colab Notebooks/Trade_database_download_v2022.1"

os.chdir(path)
os.listdir(path)
#%%
%cd /content/drive/My Drive
!ls
#%%
trade = pd.DataFrame()
for i in range(1,49):
    print("trade_db_" + str(i) + ".csv")
    temp = pd.read_csv("trade_db_" + str(i) + ".csv")
    trade = pd.concat([trade, temp], axis=0)
trade
#%%
livetrade = trade[trade["Term"] == "live"]
livetrade
#%%
easylive = livetrade.loc[:,["Year","Taxon","Order","Family","Genus","Importer","Exporter","Term","Purpose","Source"]]
#%%
family = easylive['Family'].value_counts()
family
#%%
Family = easylive['Family'].value_counts()
F = Family[:10]
data = [
    go.Bar(x=F.index, y=F,
           textfont=dict(size=16, color='#333'),
           marker=dict(
               line=dict(width=1.5)
           ))
]

layout = go.Layout(
    autosize=False,
    width=800,
    height=400,
    title='The most traded by Family'
)

fig = go.Figure(data=data, layout=layout)
py.iplot(fig, filename='Family')
#%%
Genus = easylive['Genus'].value_counts()
Genus
#%%
Genus = easylive['Genus'].value_counts()
G = Genus[:10]
data = [
    go.Bar(x=G.index, y=G,
           textfont=dict(size=16, color='#333'),
           marker=dict(
               line=dict(width=1.5)
           ))
]

layout = go.Layout(
    autosize=False,
    width=800,
    height=400,
    title='The most traded by Genus'
)

fig = go.Figure(data=data, layout=layout)
py.iplot(fig, filename='Genus')
#%%
Family[:10]
#%%
def trophy_count(input):
    d_term = easylive.groupby(input).count().Source.reset_index()
    d_term.columns=['Term','Count']
    d_term.sort_values('Count',ascending=False,inplace=True)
    d_term = d_term.head(10)
    f,ax = plt.subplots(figsize=(10,7))
    sns.barplot('Count','Term',data=d_term,ax=ax,palette='RdBu',edgecolor='0.2')
    for i in ax.patches:
        # get_width pulls left or right; get_y pushes up or down
        ax.text(i.get_width()+10, i.get_y()+.42,
                str(int(i.get_width())), fontsize=13,color='black')
    ax.set_title('Top 10 Parts of Animals use as Trophy',fontsize=16)
    ax.tick_params(length=3,color='black',labelsize=13)
    sns.despine(bottom=True)
    x_axis = ax.axes.get_xaxis().set_visible(False)
    return plt.show()

trophy_count('Term')
#%%
trade90 = pd.read_excel("trade_mammals_wild_live_1990_2021.xlsx")
trade90
#%%
trade90.value_counts()
#%%
Year = trade90['Year'].value_counts()
data = [
    go.Bar(x=Year.index, y=Year,
           textfont=dict(size=16, color='#333'),
           marker=dict(
               line=dict(width=1.5)
           ))
]

layout = go.Layout(
    autosize=False,
    width=800,
    height=400,
    title='Number of records per Year'
)

fig = go.Figure(data=data, layout=layout)
py.iplot(fig, filename='Genus')
#%%
appendix = trade['App.'].value_counts().sort_index()

data = [
    go.Bar(x=appendix.index, y=appendix,
           textfont=dict(size=16, color='#333'),
           marker=dict(
               line=dict(
                   color='rgba(50,25,25,0.5)',
                   width=1.5)
           ))
]

layout = go.Layout(
    autosize=False,
    width=600,
    height=400,
    title='The most traded by apendix'
)

fig = go.Figure(data=data, layout=layout)
py.iplot(fig, filename='apendix')
#%%
classes = trade['Class'].value_counts()

data = [
    go.Bar(x=classes.index, y=classes,
           textfont=dict(size=16, color='#333'),
           marker=dict(
               line=dict(width=1.5)
           ))
]

layout = go.Layout(
    autosize=False,
    width=800,
    height=400,
    title='The most traded by class'
)

fig = go.Figure(data=data, layout=layout)
py.iplot(fig, filename='classes')
#%%

terms = trade['Term'].value_counts()[:10]

data = [
    go.Bar(x=terms.index, y=terms,
           textfont=dict(size=16, color='#333'),
           marker=dict(
               line=dict(
                   width=1.5)
           ))
]

layout = go.Layout(
    autosize=False,
    width=800,
    height=400,
    title='The most traded by term'
)

fig = go.Figure(data=data, layout=layout)
py.iplot(fig, filename='terms')
#%%

purpose = trade['Purpose'].value_counts()

labels = [purpose_dict[purpose] for purpose in purpose.index]
data = [
    go.Bar(x=labels, y=purpose,
           textfont=dict(size=16, color='#333'),
           marker=dict(
               line=dict(
                   width=1.5)
           ))
]

layout = go.Layout(
    autosize=False,
    width=800,
    height=400,
    title='The most traded by purpose'
)

fig = go.Figure(data=data, layout=layout)
py.iplot(fig, filename='traded_by_purpose')
#%%
source_dict = dict({'A': 'Artificially propagated',
                    'C': 'Bred in captivity',
                    'D': 'Bred in captivity for commercial purposes',
                    'F': 'Born in captivity',
                    'I': 'Confiscated or seized specimens',
                    'O': 'Pre-Convention specimens',
                    'R': 'Ranched specimens',
                    'U': 'Unknown',
                    'W': 'Taken from wild',
                    'X': 'Taken from marine env.'})
#%%
source = trade['Source'].value_counts()

labels = [source_dict[source] for source in source.index]
data = [
    go.Bar(x=labels, y=purpose,
           textfont=dict(size=16, color='#333'),
           marker=dict(
               line=dict(
                   width=1.5)
           ))
]

layout = go.Layout(
    autosize=False,
    width=800,
    height=400,
    title='The most traded by source'
)

fig = go.Figure(data=data, layout=layout)
py.iplot(fig, filename='traded_by_source')
#%%
country_codes_dict = dict({'AD': 'AND',
                           'AE': 'ARE',
                           'AF': 'AFG',
                           'AG': 'ATG',
                           'AI': 'AIA',
                           'AL': 'ALB',
                           'AM': 'ARM',
                           'AN': 'ANT',
                           'AO': 'AGO',
                           'AQ': 'ATA',
                           'AR': 'ARG',
                           'AS': 'ASM',
                           'AT': 'AUT',
                           'AU': 'AUS',
                           'AW': 'ABW',
                           'AZ': 'AZE',
                           'BA': 'BIH',
                           'BB': 'BRB',
                           'BD': 'BGD',
                           'BE': 'BEL',
                           'BF': 'BFA',
                           'BG': 'BGR',
                           'BH': 'BHR',
                           'BI': 'BDI',
                           'BJ': 'BEN',
                           'BM': 'BMU',
                           'BN': 'BRN',
                           'BO': 'BOL',
                           'BR': 'BRA',
                           'BS': 'BHS',
                           'BT': 'BTN',
                           'BV': 'BVT',
                           'BW': 'BWA',
                           'BY': 'BLR',
                           'BZ': 'BLZ',
                           'CA': 'CAN',
                           'CC': 'CCK',
                           'CD': 'COD',
                           'CF': 'CAF',
                           'CG': 'COG',
                           'CH': 'CHE',
                           'CI': 'CIV',
                           'CK': 'COK',
                           'CL': 'CHL',
                           'CM': 'CMR',
                           'CN': 'CHN',
                           'CO': 'COL',
                           'CR': 'CRI',
                           'CU': 'CUB',
                           'CV': 'CPV',
                           'CX': 'CXR',
                           'CY': 'CYP',
                           'CZ': 'CZE',
                           'DE': 'DEU',
                           'DJ': 'DJI',
                           'DK': 'DNK',
                           'DM': 'DMA',
                           'DO': 'DOM',
                           'DZ': 'DZA',
                           'EC': 'ECU',
                           'EE': 'EST',
                           'EG': 'EGY',
                           'EH': 'ESH',
                           'ER': 'ERI',
                           'ES': 'ESP',
                           'ET': 'ETH',
                           'FI': 'FIN',
                           'FJ': 'FJI',
                           'FK': 'FLK',
                           'FM': 'FSM',
                           'FO': 'FRO',
                           'FR': 'FRA',
                           'GA': 'GAB',
                           'GB': 'GBR',
                           'GD': 'GRD',
                           'GE': 'GEO',
                           'GF': 'GUF',
                           'GG': 'GGY',
                           'GH': 'GHA',
                           'GI': 'GIB',
                           'GL': 'GRL',
                           'GM': 'GMB',
                           'GN': 'GIN',
                           'GP': 'GLP',
                           'GQ': 'GNQ',
                           'GR': 'GRC',
                           'GS': 'SGS',
                           'GT': 'GTM',
                           'GU': 'GUM',
                           'GW': 'GNB',
                           'GY': 'GUY',
                           'HK': 'HKG',
                           'HM': 'HMD',
                           'HN': 'HND',
                           'HR': 'HRV',
                           'HT': 'HTI',
                           'HU': 'HUN',
                           'ID': 'IDN',
                           'IE': 'IRL',
                           'IL': 'ISR',
                           'IM': 'IMN',
                           'IN': 'IND',
                           'IO': 'IOT',
                           'IQ': 'IRQ',
                           'IR': 'IRN',
                           'IS': 'ISL',
                           'IT': 'ITA',
                           'JE': 'JEY',
                           'JM': 'JAM',
                           'JO': 'JOR',
                           'JP': 'JPN',
                           'KE': 'KEN',
                           'KG': 'KGZ',
                           'KH': 'KHM',
                           'KI': 'KIR',
                           'KM': 'COM',
                           'KN': 'KNA',
                           'KP': 'PRK',
                           'KR': 'KOR',
                           'KW': 'KWT',
                           'KY': 'CYM',
                           'KZ': 'KAZ',
                           'LA': 'LAO',
                           'LB': 'LBN',
                           'LC': 'LCA',
                           'LI': 'LIE',
                           'LK': 'LKA',
                           'LR': 'LBR',
                           'LS': 'LSO',
                           'LT': 'LTU',
                           'LU': 'LUX',
                           'LV': 'LVA',
                           'LY': 'LBY',
                           'MA': 'MAR',
                           'MC': 'MCO',
                           'MD': 'MDA',
                           'ME': 'MNE',
                           'MG': 'MDG',
                           'MH': 'MHL',
                           'MK': 'MKD',
                           'ML': 'MLI',
                           'MM': 'MMR',
                           'MN': 'MNG',
                           'MO': 'MAC',
                           'MP': 'MNP',
                           'MQ': 'MTQ',
                           'MR': 'MRT',
                           'MS': 'MSR',
                           'MT': 'MLT',
                           'MU': 'MUS',
                           'MV': 'MDV',
                           'MW': 'MWI',
                           'MX': 'MEX',
                           'MY': 'MYS',
                           'MZ': 'MOZ',
                           'NA': 'NAM',
                           'NC': 'NCL',
                           'NE': 'NER',
                           'NF': 'NFK',
                           'NG': 'NGA',
                           'NI': 'NIC',
                           'NL': 'NLD',
                           'NO': 'NOR',
                           'NP': 'NPL',
                           'NR': 'NRU',
                           'NU': 'NIU',
                           'NZ': 'NZL',
                           'OM': 'OMN',
                           'PA': 'PAN',
                           'PE': 'PER',
                           'PF': 'PYF',
                           'PG': 'PNG',
                           'PH': 'PHL',
                           'PK': 'PAK',
                           'PL': 'POL',
                           'PM': 'SPM',
                           'PN': 'PCN',
                           'PR': 'PRI',
                           'PS': 'PSE',
                           'PT': 'PRT',
                           'PW': 'PLW',
                           'PY': 'PRY',
                           'QA': 'QAT',
                           'RE': 'REU',
                           'RO': 'ROU',
                           'RS': 'SRB',
                           'RU': 'RUS',
                           'RW': 'RWA',
                           'SA': 'SAU',
                           'SB': 'SLB',
                           'SC': 'SYC',
                           'SD': 'SDN',
                           'SE': 'SWE',
                           'SG': 'SGP',
                           'SH': 'SHN',
                           'SI': 'SVN',
                           'SJ': 'SJM',
                           'SK': 'SVK',
                           'SL': 'SLE',
                           'SM': 'SMR',
                           'SN': 'SEN',
                           'SO': 'SOM',
                           'SR': 'SUR',
                           'ST': 'STP',
                           'SV': 'SLV',
                           'SY': 'SYR',
                           'SZ': 'SWZ',
                           'TC': 'TCA',
                           'TD': 'TCD',
                           'TF': 'ATF',
                           'TG': 'TGO',
                           'TH': 'THA',
                           'TJ': 'TJK',
                           'TK': 'TKL',
                           'TL': 'TLS',
                           'TM': 'TKM',
                           'TN': 'TUN',
                           'TO': 'TON',
                           'TR': 'TUR',
                           'TT': 'TTO',
                           'TV': 'TUV',
                           'TW': 'TWN',
                           'TZ': 'TZA',
                           'UA': 'UKR',
                           'UG': 'UGA',
                           'UM': 'UMI',
                           'US': 'USA',
                           'UY': 'URY',
                           'UZ': 'UZB',
                           'VA': 'VAT',
                           'VC': 'VCT',
                           'VE': 'VEN',
                           'VG': 'VGB',
                           'VI': 'VIR',
                           'VN': 'VNM',
                           'VU': 'VUT',
                           'WF': 'WLF',
                           'WS': 'WSM',
                           'YE': 'YEM',
                           'YT': 'MYT',
                           'ZA': 'ZAF',
                           'ZM': 'ZMB',
                           'ZW': 'ZWE'})
#%%
species = pd.read_csv('comptab_2018-01-29 16_00_comma_separated.csv')
#%%
importers = species['Importer'].value_counts()
exporters = species['Exporter'].value_counts()
total_trade = exporters.add(importers, fill_value=0)
total_trade = total_trade.rename(country_codes_dict)

data = [ dict(
    type = 'choropleth',
    locations = total_trade.index,
    z = total_trade,
    colorscale='Electric',
    autocolorscale = False,
    reversescale = True,
    marker = dict(
        line = dict (
            color = 'rgb(180,180,180)',
            width = 0.5
        ) ),
    colorbar = dict(
        autotick = False,
        title = 'Number of entries'),
) ]

layout = dict(
    title = 'Countries involved into wildlife trade<br>(export + import entries)',
    geo = dict(
        showframe = False,
        showcoastlines = False,
        projection = dict(
            type = 'Mercator'
        )
    )
)

fig = dict( data=data, layout=layout )
py.iplot( fig, validate=False, filename='trade-world-map' )
#%%
importers = species['Importer'].value_counts()
exporters = species['Exporter'].value_counts()
total_trade = exporters.add(importers, fill_value=0)
total_trade = total_trade.rename(country_codes_dict)
#%%
total_trade
#%%
MAP = pd.read_csv("tmap.csv",header=0)
cc = MAP.set_index('Country')
c = cc['data']
#%%
c
#%%
data = [ dict(
    type = 'choropleth',
    locations = c.index,
    z = c,
    #colorscale='Viridis',
    #colorscale='Bergeron',
    #colorscale = 'Reds',
    colorscale = 'Joly',
    autocolorscale = False,
    reversescale = True,
    marker = dict(
        line = dict (
            color = 'rgb(180,180,180)',
            width = 0.5
        ) ),
    colorbar = dict(
        autotick = False,
        title = 'Number of infected persons'),
) ]

layout = dict(
    title = 'Current global Epidemic',
    geo = dict(
        showframe = False,
        showcoastlines = False,
        projection = dict(
            type = 'Mercator'
        )
    )
)

fig = dict( data=data, layout=layout )

py.iplot( fig, validate=False, filename='trade-world-map' )